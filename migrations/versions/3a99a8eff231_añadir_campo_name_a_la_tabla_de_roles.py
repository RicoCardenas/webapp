"""a√±adir campo name a la tabla de roles

Revision ID: 3a99a8eff231
Revises: 
Create Date: 2025-10-26 19:06:06.911837

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3a99a8eff231'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.alter_column('ip_address',
               existing_type=postgresql.INET(),
               type_=sa.String(length=45),
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('idx_audit_log_target_entity'))
        batch_op.drop_index(batch_op.f('idx_audit_log_user_date'))
        batch_op.drop_constraint(batch_op.f('audit_log_user_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('plot_history', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_plot_history_metadata_gin'), postgresql_using='gin')
        batch_op.drop_index(batch_op.f('idx_plot_history_parameters_gin'), postgresql_using='gin')
        batch_op.drop_index(batch_op.f('idx_plot_history_user_date_active'), postgresql_where='(deleted_at IS NULL)')
        batch_op.drop_constraint(batch_op.f('plot_history_user_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('plot_history_tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_plot_history_tags_tag_id'))
        batch_op.drop_constraint(batch_op.f('plot_history_tags_plot_history_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('plot_history_tags_tag_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'plot_history', ['plot_history_id'], ['id'])
        batch_op.create_foreign_key(None, 'tags', ['tag_id'], ['id'])

    with op.batch_alter_table('plot_presets', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_plot_presets_user_active'), postgresql_where='(deleted_at IS NULL)')
        batch_op.drop_constraint(batch_op.f('plot_presets_user_id_name_key'), type_='unique')
        batch_op.create_unique_constraint('_user_preset_name_uc', ['user_id', 'name'])
        batch_op.drop_constraint(batch_op.f('plot_presets_user_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_tags_user_name'))
        batch_op.drop_constraint(batch_op.f('tags_user_id_name_key'), type_='unique')
        batch_op.create_unique_constraint('_user_tag_name_uc', ['user_id', 'name'])
        batch_op.drop_constraint(batch_op.f('tags_user_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('user_sessions', schema=None) as batch_op:
        batch_op.alter_column('ip_address',
               existing_type=postgresql.INET(),
               type_=sa.String(length=45),
               existing_nullable=True)
        batch_op.drop_index(batch_op.f('idx_user_sessions_expires_at'))
        batch_op.drop_index(batch_op.f('idx_user_sessions_user_id'))
        batch_op.drop_constraint(batch_op.f('user_sessions_user_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('user_tokens', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_user_tokens_expires_at'))
        batch_op.drop_constraint(batch_op.f('user_tokens_user_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.String(length=100), nullable=False))
        batch_op.alter_column('email',
               existing_type=postgresql.CITEXT(),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.drop_index(batch_op.f('idx_users_email_active'), postgresql_where='(deleted_at IS NULL)')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_users_email_active'), ['email'], unique=False, postgresql_where='(deleted_at IS NULL)')
        batch_op.alter_column('email',
               existing_type=sa.String(length=255),
               type_=postgresql.CITEXT(),
               existing_nullable=False)
        batch_op.drop_column('name')

    with op.batch_alter_table('user_tokens', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('user_tokens_user_id_fkey'), 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.create_index(batch_op.f('idx_user_tokens_expires_at'), ['expires_at'], unique=False)

    with op.batch_alter_table('user_sessions', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('user_sessions_user_id_fkey'), 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.create_index(batch_op.f('idx_user_sessions_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_user_sessions_expires_at'), ['expires_at'], unique=False)
        batch_op.alter_column('ip_address',
               existing_type=sa.String(length=45),
               type_=postgresql.INET(),
               existing_nullable=True)

    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('tags_user_id_fkey'), 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_constraint('_user_tag_name_uc', type_='unique')
        batch_op.create_unique_constraint(batch_op.f('tags_user_id_name_key'), ['user_id', 'name'], postgresql_nulls_not_distinct=False)
        batch_op.create_index(batch_op.f('idx_tags_user_name'), ['user_id', 'name'], unique=False)

    with op.batch_alter_table('plot_presets', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('plot_presets_user_id_fkey'), 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_constraint('_user_preset_name_uc', type_='unique')
        batch_op.create_unique_constraint(batch_op.f('plot_presets_user_id_name_key'), ['user_id', 'name'], postgresql_nulls_not_distinct=False)
        batch_op.create_index(batch_op.f('idx_plot_presets_user_active'), ['user_id'], unique=False, postgresql_where='(deleted_at IS NULL)')

    with op.batch_alter_table('plot_history_tags', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('plot_history_tags_tag_id_fkey'), 'tags', ['tag_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('plot_history_tags_plot_history_id_fkey'), 'plot_history', ['plot_history_id'], ['id'], ondelete='CASCADE')
        batch_op.create_index(batch_op.f('idx_plot_history_tags_tag_id'), ['tag_id'], unique=False)

    with op.batch_alter_table('plot_history', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('plot_history_user_id_fkey'), 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.create_index(batch_op.f('idx_plot_history_user_date_active'), ['user_id', sa.literal_column('created_at DESC')], unique=False, postgresql_where='(deleted_at IS NULL)')
        batch_op.create_index(batch_op.f('idx_plot_history_parameters_gin'), ['plot_parameters'], unique=False, postgresql_using='gin')
        batch_op.create_index(batch_op.f('idx_plot_history_metadata_gin'), ['plot_metadata'], unique=False, postgresql_using='gin')

    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('audit_log_user_id_fkey'), 'users', ['user_id'], ['id'], ondelete='SET NULL')
        batch_op.create_index(batch_op.f('idx_audit_log_user_date'), ['user_id', sa.literal_column('created_at DESC')], unique=False)
        batch_op.create_index(batch_op.f('idx_audit_log_target_entity'), ['target_entity_type', 'target_entity_id'], unique=False)
        batch_op.alter_column('ip_address',
               existing_type=sa.String(length=45),
               type_=postgresql.INET(),
               existing_nullable=True)

    # ### end Alembic commands ###
